name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    if: contains(github.event.head_commit.message, 'build') || contains(github.event.pull_request.title, 'build')
    name: Build ${{ matrix.os }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        # python-version: ["3.9", "3.10", "3.11"]
        os: [windows-latest]
        python-version: ["3.9"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-activate-base: false
        miniconda-version: "latest"
        python-version: ${{ matrix.python-version }}
        activate-environment: pst-env

    - name: Cache Conda packages
      uses: actions/cache@v3
      with:
        path: ~/conda_pkgs_dir
        key: conda-${{ runner.os }}-${{ matrix.python-version }}
        restore-keys: |
          conda-${{ runner.os }}-

    - name: Prepare Conda environment file
      shell: bash
      run: |
        sed "s/{{ PYTHON_VERSION }}/${{ matrix.python-version }}/g" env-template.yml > environment.yml

    - name: Create Conda environment
      shell: bash -l {0}
      run: |
        conda env create -f environment.yml -n pst-env

    # Install OS-specific GDAL dependencies
    - name: Install GDAL system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable
        sudo apt-get update
        sudo apt-get install -y gdal-bin libgdal-dev

    - name: Install GDAL system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install gdal
        brew upgrade gdal

    - name: Set up MSVC environment (Windows)
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install missing DLL support for h5py (Windows)
      if: runner.os == 'Windows'
      shell: bash -l {0}
      run: |
        conda activate pst-env
        conda install -y -c conda-forge hdf5 h5py

    - name: Install polsartools pip package
      shell: bash -l {0}
      run: |
        conda activate pst-env
        python -m pip install --upgrade pip
        python -m pip install .

    - name: Build Conda package
      shell: bash -l {0}
      run: |
        conda activate pst-env
        conda install -y conda-build
        conda build ./conda-recipe

    - name: Run tests
      shell: bash -l {0}
      run: |
        conda activate pst-env
        cd tests
        python -m pytest -v tests.py
