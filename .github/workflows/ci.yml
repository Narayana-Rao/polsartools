name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    if: contains(github.event.head_commit.message, 'build') || contains(github.event.pull_request.title, 'build')
    name: Build ${{ matrix.os }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, windows-latest,macos-latest]
        python-version: ["3.9"]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    # Set up Miniconda for Conda build
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        auto-activate-base: false
        python-version: ${{ matrix.python-version }}

    - name: Install Conda dependencies
      run: |
        conda install -y conda-build anaconda-client  # Install Conda build tools
    # Install GDAL system dependencies based on the OS
    - name: Install GDAL system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
        sudo apt-get update
        sudo apt-get install -y gdal-bin libgdal-dev
    - name: Install GDAL system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install gdal
        brew upgrade gdal
    - name: Install GDAL with Conda (Windows)
      if: runner.os == 'Windows'
      run: |
        conda install -y -c conda-forge gdal pytest hdf5  h5py

    - name: Install dependencies and polsartools pip package
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest
        python -m pip install -r requirements.txt
        python -m pip install .  

    - name: Test with pytest (Windows)
      if: runner.os == 'Windows'
      run: |
        cd tests
        python -m pytest -v ../tests/tests.py

    - name: Test with pytest (Linux/MacOS)
      if: runner.os != 'Windows'
      run: |
        cd tests
        python -m pytest -v tests/tests.py


    - name: Build Python wheel
      run: |
        python -m pip install --upgrade build
        python -m build --wheel --outdir dist

    - name: Upload wheel artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: python-wheel
        path: dist/*.whl

    - name: Build Conda package
      run: |
        conda build ./conda-recipe  --output-folder output

    - name: Upload conda package artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: conda-package
        path: |
          output/**/*.tar.bz2
          output/**/*.conda