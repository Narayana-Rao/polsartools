name: Build

on: [push, pull_request]

jobs:
  build:
    name: Build ${{ matrix.os }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        include:
        - os: windows-latest
          python-version: "3.12"
        - os: macos-latest
          python-version: "3.12"

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        miniconda-version: "latest"

    - name: Install GDAL system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y gdal-bin libgdal-dev

    - name: Install GDAL system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install gdal

    - name: Create conda environment and install GDAL/h5py
      run: |
        conda create -n myenv -c conda-forge python=${{ matrix.python-version }} gdal h5py
        echo "CONDA_PREFIX=$HOME/miniconda/envs/myenv" >> $GITHUB_ENV

    - name: Install dependencies from requirements.txt
      run: |
        conda run -n myenv python -m pip install --upgrade pip
        conda run -n myenv python -m pip install -r requirements.txt
        conda run -n myenv python -m pip install .

    - name: Test with pytest
      run: |
        cd tests
        conda run -n myenv python -m pytest -v tests.py
